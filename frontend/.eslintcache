[{"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\index.js":"1","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\App.js":"2","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\footer.js":"4","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\header.js":"5","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\ProductScreen.js":"7","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\products.js":"9","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Rating.js":"10","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\store.js":"11","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\productReducers.js":"12","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\productAction.js":"14","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Message.js":"16","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\cartActions.js":"20","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\userReducers.js":"21","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\LoginScreen.js":"23","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\userActions.js":"24","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Header.js":"26","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\RegisterScreen.js":"27","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\ProfileScreen.js":"28","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\ShippingScreen.js":"29","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\CheckoutSteps.js":"30","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\PaymentScreen.js":"31","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\PlaceOrderScreen.js":"32","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\orderReducers.js":"33","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\OrderConstants.js":"34","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\orderActions.js":"35","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\ProductCarousel.js":"36","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Paginate.js":"37","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\productActions.js":"38","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\ErrorBoundry.jsx":"39"},{"size":599,"mtime":1674525132507,"results":"40","hashOfConfig":"41"},{"size":1554,"mtime":1677497838432,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1672991780859,"results":"43","hashOfConfig":"41"},{"size":366,"mtime":1673003274154,"results":"44","hashOfConfig":"41"},{"size":1545,"mtime":1673739962460,"results":"45","hashOfConfig":"41"},{"size":1600,"mtime":1674586515471,"results":"46","hashOfConfig":"41"},{"size":4039,"mtime":1673621582986,"results":"47","hashOfConfig":"41"},{"size":962,"mtime":1673071646243,"results":"48","hashOfConfig":"41"},{"size":2607,"mtime":1672992753216,"results":"49","hashOfConfig":"41"},{"size":1523,"mtime":1673030141800,"results":"50","hashOfConfig":"41"},{"size":2502,"mtime":1674585997583,"results":"51","hashOfConfig":"41"},{"size":4039,"mtime":1674585844106,"results":"52","hashOfConfig":"41"},{"size":1538,"mtime":1674585698646,"results":"53","hashOfConfig":"41"},{"size":1226,"mtime":1673522547308,"results":"54","hashOfConfig":"41"},{"size":425,"mtime":1673516363579,"results":"55","hashOfConfig":"41"},{"size":216,"mtime":1673521878996,"results":"56","hashOfConfig":"41"},{"size":3764,"mtime":1673627719375,"results":"57","hashOfConfig":"41"},{"size":1309,"mtime":1673836202125,"results":"58","hashOfConfig":"41"},{"size":292,"mtime":1673835946048,"results":"59","hashOfConfig":"41"},{"size":1249,"mtime":1673824021682,"results":"60","hashOfConfig":"41"},{"size":3884,"mtime":1674585858637,"results":"61","hashOfConfig":"41"},{"size":1514,"mtime":1674585727343,"results":"62","hashOfConfig":"41"},{"size":2355,"mtime":1673731319936,"results":"63","hashOfConfig":"41"},{"size":3916,"mtime":1673793269905,"results":"64","hashOfConfig":"41"},{"size":354,"mtime":1673660910696,"results":"65","hashOfConfig":"41"},{"size":1639,"mtime":1674583653112,"results":"66","hashOfConfig":"41"},{"size":3134,"mtime":1673743904089,"results":"67","hashOfConfig":"41"},{"size":3925,"mtime":1673793061169,"results":"68","hashOfConfig":"41"},{"size":2636,"mtime":1673800040155,"results":"69","hashOfConfig":"41"},{"size":1336,"mtime":1673799925624,"results":"70","hashOfConfig":"41"},{"size":1586,"mtime":1673824150498,"results":"71","hashOfConfig":"41"},{"size":5996,"mtime":1673833006137,"results":"72","hashOfConfig":"41"},{"size":3992,"mtime":1674586280217,"results":"73","hashOfConfig":"41"},{"size":1270,"mtime":1674585681581,"results":"74","hashOfConfig":"41"},{"size":6285,"mtime":1674586251846,"results":"75","hashOfConfig":"41"},{"size":1419,"mtime":1677498971231,"results":"76","hashOfConfig":"41"},{"size":859,"mtime":1672992754323,"results":"77","hashOfConfig":"41"},{"size":5931,"mtime":1672992753625,"results":"78","hashOfConfig":"41"},{"size":745,"mtime":1677497948857,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1b22zq4",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\index.js",[],["172","173"],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\App.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\footer.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\header.js",["174","175","176"],"import React from \"react\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction header() {\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    console.log('Logout')\r\n  }\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Proshop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n    {userInfo ? (\r\n    <NavDropdown title={userInfo.name} id='username'>\r\n      <LinkContainer to='/profile'>\r\n        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n      </LinkContainer>\r\n      <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n      </NavDropdown>\r\n    ):(\r\n      <LinkContainer to='/login'>\r\n        <Nav.Link><i className=\"fas fa-user\"></i></Nav.Link>\r\n      </LinkContainer>\r\n      )}\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\HomeScreen.js",["177"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\ProductScreen.js",["178","179"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { listProductDetails } from \"../actions/productAction\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n// import axios from \"axios\";\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  // const [product, setProduct] = useState([]);\r\n  const [qty, setQty] = useState(1);\r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} ratings`}\r\n                  color={\"#f8e825\"}\r\n                />\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>Price: ₹ {product.price}</ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                Description: {product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>₹{product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col xs=\"auto\" className=\"my-1\">\r\n                        <Form.Control\r\n                          as=\"select\" size='sm'\r\n                          value={qty}\r\n                          onChange={(e) => setQty( e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className=\"btn-block\"\r\n                    disabled={product.countInStock == 0}\r\n                    type=\"button\"\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\products.js",[],["180","181"],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\store.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\userActions.js",["182"],"import axios from \"axios\";\r\n\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      { username: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n    \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    \r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}/`, config);\r\n    \r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n    \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    \r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    \r\n    const { data } = await axios.put(`/api/users/profile/update/`,user, config);\r\n    \r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    \r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    \r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Header.js",["183"],"import React from \"react\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Headers() {\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () => {\r\n    // console.log('Logout')\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n      <Navbar  bg='dark'variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Proshop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/cart\" >\r\n                <Nav.Link >\r\n                  <i className=\"fas fa-shopping-cart\" ></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n    {userInfo ? (\r\n    <NavDropdown title={userInfo.name} id='username'>\r\n      <LinkContainer to='/profile'>\r\n        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n      </LinkContainer>\r\n      <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n      </NavDropdown>\r\n    ):(\r\n      <LinkContainer to='/login'>\r\n        <Nav.Link><i className=\"fas fa-user\">login</i></Nav.Link>\r\n      </LinkContainer>\r\n      )}\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport default Headers;\r\n","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\RegisterScreen.js",["184","185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { login,register } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !=confirmPassword){\r\n        setMessage(\"Password Does Not Match\")\r\n    }\r\n    else{\r\n    dispatch(register(name, email, password));\r\n    }\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Register</h1>\r\n\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"email\">\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"passwordConfirm\">\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"password\"\r\n          placeholder=\"Confirm Enter Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button type=\"submit\" variant=\"primary\">\r\n        Register\r\n      </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Already An Account?\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Sign In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\ProfileScreen.js",["188","189"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\n\r\nfunction ProfileScreen({history}) {\r\n        const [name, setName] = useState(\"\");\r\n        const [email, setEmail] = useState(\"\");\r\n        const [password, setPassword] = useState(\"\");\r\n        const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n        const [message, setMessage] = useState(\"\");\r\n      \r\n        const dispatch = useDispatch();\r\n      \r\n        const userDetails = useSelector((state) => state.userDetails);\r\n        const { error, loading, user } = userDetails;\r\n\r\n        const userLogin = useSelector((state) => state.userLogin);\r\n        const { userInfo } = userLogin;\r\n\r\n        const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n        const { success } = userUpdateProfile;\r\n\r\n        useEffect(() => {\r\n            if (!userInfo) {\r\n              history.push('/login');\r\n            }else{\r\n                if(!user || !user.name || success){\r\n                    dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                    dispatch(getUserDetails('profile'))\r\n                }else{\r\n                    setName(user.name)\r\n                    setEmail(user.email)\r\n                }\r\n            }\r\n          }, [dispatch, history, userInfo, user, success]);\r\n      \r\n        const submitHandler = (e) => {\r\n          e.preventDefault();\r\n      \r\n          if (password !=confirmPassword){\r\n              setMessage(\"Password Does Not Match\")\r\n          }\r\n          else{\r\n          dispatch(updateUserProfile({\r\n            'id':user._id,\r\n            \"name\":name,\r\n            \"email\":email,\r\n            \"password\": password\r\n          }))\r\n          setMessage('')\r\n          }\r\n        };\r\n      \r\n  return (\r\n    <Row>\r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"email\">\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"passwordConfirm\">\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Confirm Enter Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button type=\"submit\" variant=\"primary\">\r\n        Update\r\n      </Button>\r\n\r\n      </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\ShippingScreen.js",["190"],"import React, { useState, useEffect } from \"react\";\r\nimport {Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress }  = cart \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode,country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2/>\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group controlId=\"address\">\r\n        <Form.Label>Address</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"text\"\r\n          placeholder=\"Enter address\"\r\n          value={address ? address : ''}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n        <Form.Group controlId=\"city\">\r\n        <Form.Label>City</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"text\"\r\n          placeholder=\"Enter city\"\r\n          value={city ? city : ''}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n        <Form.Label>Postal Code</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"text\"\r\n          placeholder=\"Enter Postal Code\"\r\n          value={postalCode ? postalCode : ''}\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n        ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n        <Form.Group controlId=\"country\">\r\n        <Form.Label>Country</Form.Label>\r\n        <Form.Control\r\n        required\r\n          type=\"text\"\r\n          placeholder=\"Enter Country\"\r\n          value={country ? country : ''}\r\n          onChange={(e) => setCountry(e.target.value)}\r\n        ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n            Continue\r\n        </Button>\r\n\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\PaymentScreen.js",["191"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    if (!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>\r\n                <Col>\r\n                <Form.Check\r\n                type=\"radio\"\r\n                label = 'Paypal or Credit Card'\r\n                id=\"paypal\"\r\n                name='paymentMethod'\r\n                checked\r\n                onChange={(e) => setPaymentMethod(e.target.value)}>\r\n\r\n                </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n            <Button type='submit' variant=\"primary\">\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\screens\\PlaceOrderScreen.js",["192","193"],"import React, { useState, useEffect } from \"react\";\r\nimport {Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n\r\n    cart.itemsPrice  = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = Number(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}/`)\r\n        }\r\n    },[success,history])\r\n\r\n    const placeOrder =() => {\r\n\r\n        dispatch(createOrder({\r\n            orderItems : cart.cartItems,\r\n            shippingAddress : cart.shippingAddress,\r\n            paymentMethod : cart.paymentMethod,\r\n            itemsPrice : cart.itemsPrice,\r\n            shippingPrice : cart.shippingPrice,\r\n            taxPrice : cart.taxPrice,\r\n            totalPrice : cart.totalPrice,\r\n        }))\r\n    }\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 step4 />\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n\r\n                    <p>\r\n                        <strong>Shipping: </strong>\r\n                        {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                        {' '}\r\n                        {cart.shippingAddress.postalCode},\r\n                        {' '}\r\n                         {cart.shippingAddress.country}\r\n                    </p>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n\r\n                    <p>\r\n                        <strong>Method: </strong>\r\n                        {cart.paymentMethod}\r\n                    </p>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n\r\n                    {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                        Your Cart is Empty\r\n                    </Message> : (\r\n                        <ListGroup variant=\"flush\">\r\n                            {cart.cartItems.map((item,index) => (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            {item.qty} X ₹{item.price} = ₹{(item.qty * item.price).toFixed(2)}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            \r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Item:</Col>\r\n                                <Col>₹{cart.itemPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping:</Col>\r\n                                <Col>₹{cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax :</Col>\r\n                                <Col>₹{cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total :</Col>\r\n                                <Col>₹{cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            type='submit'\r\n                            className=\"btn-block\"\r\n                            disabled = {cart.cartItems===0}\r\n                            onClick={placeOrder}>\r\n                                Place Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </Card>\r\n            </Col>\r\n\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\constants\\OrderConstants.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\orderActions.js",["194","195","196"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/OrderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\actions\\productActions.js",["197"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\Ap\\Desktop\\Project-EComm\\frontend\\src\\ErrorBoundry.jsx",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":34,"nodeType":"204","messageId":"205","endLine":2,"endColumn":37},{"ruleId":"202","severity":1,"message":"206","line":3,"column":23,"nodeType":"204","messageId":"205","endLine":3,"endColumn":34},{"ruleId":"207","severity":2,"message":"208","line":7,"column":21,"nodeType":"204","endLine":7,"endColumn":32},{"ruleId":"202","severity":1,"message":"209","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"210","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":117,"column":52,"nodeType":"213","messageId":"214","endLine":117,"endColumn":54},{"ruleId":"198","replacedBy":"215"},{"ruleId":"200","replacedBy":"216"},{"ruleId":"202","severity":1,"message":"217","line":18,"column":3,"nodeType":"204","messageId":"205","endLine":18,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":2,"column":34,"nodeType":"204","messageId":"205","endLine":2,"endColumn":37},{"ruleId":"202","severity":1,"message":"218","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"219","line":7,"column":10,"nodeType":"204","messageId":"205","endLine":7,"endColumn":15},{"ruleId":"202","severity":1,"message":"220","line":22,"column":27,"nodeType":"204","messageId":"205","endLine":22,"endColumn":35},{"ruleId":"211","severity":1,"message":"221","line":27,"column":18,"nodeType":"213","messageId":"214","endLine":27,"endColumn":20},{"ruleId":"202","severity":1,"message":"222","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"221","line":46,"column":24,"nodeType":"213","messageId":"214","endLine":46,"endColumn":26},{"ruleId":"202","severity":1,"message":"218","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"218","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"209","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":35,"column":7,"nodeType":"225","endLine":35,"endColumn":24,"suggestions":"226"},{"ruleId":"202","severity":1,"message":"227","line":14,"column":5,"nodeType":"204","messageId":"205","endLine":14,"endColumn":20},{"ruleId":"202","severity":1,"message":"228","line":19,"column":5,"nodeType":"204","messageId":"205","endLine":19,"endColumn":24},{"ruleId":"202","severity":1,"message":"229","line":28,"column":5,"nodeType":"204","messageId":"205","endLine":28,"endColumn":24},{"ruleId":"202","severity":1,"message":"230","line":117,"column":17,"nodeType":"204","messageId":"205","endLine":117,"endColumn":21},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useSelector\" is called in function \"header\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'useState' is defined but never used.","'ListGroupItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["231"],["232"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'useEffect' is defined but never used.","'login' is defined but never used.","'userInfo' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["233"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},"Update the dependencies array to be: [success, history, order._id]",{"range":"236","text":"237"},[1205,1222],"[success, history, order._id]"]